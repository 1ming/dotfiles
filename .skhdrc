
# open apps
# alt - return : open -a "/Applications/iTerm.app"

# focus window
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

# change focus within window stack
shift + alt - k : yabai -m window --focus stack.prev
shift + alt - j : yabai -m window --focus stack.next
shift + alt - n : yabai -m window --focus stack.last
shift + alt - p : yabai -m window --focus stack.first

# swap managed window (swaps the entire stack)
# changed from shift + cmd + {direction} since it often conflicts with mac os
ctrl + shift + cmd - k : yabai -m window --swap north
ctrl + shift + cmd - j : yabai -m window --swap south
ctrl + shift + cmd - h : yabai -m window --swap west
ctrl + shift + cmd - l : yabai -m window --swap east

# move individual window (only moves the focused window on the stack)
shift + alt + cmd - h : yabai -m window --warp west
shift + alt + cmd - j : yabai -m window --warp south
shift + alt + cmd - k : yabai -m window --warp north
shift + alt + cmd - l : yabai -m window --warp east

# Resize windows
ctrl + alt - h : yabai -m window --resize left:-50:0; \
                  yabai -m window --resize right:-50:0
ctrl + alt - j : yabai -m window --resize bottom:0:50; \
                  yabai -m window --resize top:0:50
ctrl + alt - k : yabai -m window --resize top:0:-50; \
                  yabai -m window --resize bottom:0:-50
ctrl + alt - l : yabai -m window --resize right:50:0; \
                  yabai -m window --resize left:50:0

# balance size of windows
ctrl + alt - 0 : yabai -m space --balance

# Add the active window  to the window or stack to the {direction}
ctrl + alt + cmd - h  : yabai -m window west --stack $(yabai -m query --windows --window | jq -r '.id')
ctrl + alt + cmd - j  : yabai -m window south --stack $(yabai -m query --windows --window | jq -r '.id')
ctrl + alt + cmd - k    : yabai -m window north --stack $(yabai -m query --windows --window | jq -r '.id')
ctrl + alt + cmd - l : yabai -m window east --stack $(yabai -m query --windows --window | jq -r '.id')

# make floating window fill screen
ctrl + alt + cmd - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
ctrl + alt + cmd - left   : yabai -m window --grid 1:2:0:0:1:1
ctrl + alt + cmd - right  : yabai -m window --grid 1:2:2:0:1:1

# focus other monitor
ctrl + alt - z  : yabai -m display --focus next || yabai -m display --focus first

# send window to other monitor and follow focus
ctrl + alt + cmd  - n  : win_id="$(yabai -m query --windows --window | jq -r '.id')" \
	&& (yabai -m window --display next || yabai -m window --display first) \
	&& disp_id="$(yabai -m query --displays --display | jq -r '.id')" \
    && yabai -m window --focus "$win_id"

# send space to other monitor
ctrl + alt - n : yabai -m space --display next || yabai -m space --display first

# set insertion point in focused container (splits window)
ctrl + alt + shift - h : yabai -m window --insert west
ctrl + alt + shift - j : yabai -m window --insert south
ctrl + alt + shift - k : yabai -m window --insert north
ctrl + alt + shift - l : yabai -m window --insert east

# set insertion point to stack on top of current window (does not split)
ctrl + alt + shift - n : yabai -m window --insert stack

# toggle window zoom
alt - d : yabai -m window --toggle zoom-parent
alt - f : yabai -m window --toggle zoom-fullscreen


# toggle window split type
alt - e : yabai -m window --toggle split

# switch layout
ctrl + alt - a : yabai -m space --layout bsp
ctrl + alt - d : yabai -m space --layout float
ctrl + alt - s : yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "float" else "bsp" end')

# cycle through spaces
# https://github.com/koekeishiya/yabai/issues/303
alt - c : yabai -m space --focus "$(yabai -m query --spaces --display \
    | jq 'reverse | nth(index(map(select(.focused == 1))) - 1).index')"

# cycle backwards
alt - z : yabai -m space --focus "$(yabai -m query --spaces --display \
    | jq 'nth(index(map(select(.focused == 1))) - 1).index')"

# go to specified space
alt - 1 : yabai -m space --focus 1
alt - 2 : yabai -m space --focus 2
alt - 3 : yabai -m space --focus 3
alt - 4 : yabai -m space --focus 4
alt - 5 : yabai -m space --focus 5
alt - 6 : yabai -m space --focus 6
alt - 7 : yabai -m space --focus 7
alt - 8 : yabai -m space --focus 8

# move window to a specified space
shift + alt - 1 : win_id="$(yabai -m query --windows --window | jq -r '.id')" \
    && (yabai -m window --space 1 && yabai -m window --focus "$win_id")
shift + alt - 2 : win_id="$(yabai -m query --windows --window | jq -r '.id')" \
    && (yabai -m window --space 2 && yabai -m window --focus "$win_id")
shift + alt - 3 : win_id="$(yabai -m query --windows --window | jq -r '.id')" \
    && (yabai -m window --space 3 && yabai -m window --focus "$win_id")
shift + alt - 4 : win_id="$(yabai -m query --windows --window | jq -r '.id')" \
    && (yabai -m window --space 4 && yabai -m window --focus "$win_id")
shift + alt - 5 : win_id="$(yabai -m query --windows --window | jq -r '.id')" \
    && (yabai -m window --space 5 && yabai -m window --focus "$win_id")
shift + alt - 6 : win_id="$(yabai -m query --windows --window | jq -r '.id')" \
    && (yabai -m window --space 6 && yabai -m window --focus "$win_id")
shift + alt - 7 : win_id="$(yabai -m query --windows --window | jq -r '.id')" \
    && (yabai -m window --space 7 && yabai -m window --focus "$win_id")
shift + alt - 8 : win_id="$(yabai -m query --windows --window | jq -r '.id')" \
    && (yabai -m window --space 8 && yabai -m window --focus "$win_id")

# cycle all windows on space backwards by coordinate
alt - tab : yabai -m window --focus "$(yabai -m query --windows --space | jq -re "[sort_by(.id, .frame) | reverse | .[] | select(.role == \"AXWindow\" and .subrole == \"AXStandardWindow\") | .id] | nth(index($(yabai -m query --windows --window | jq -re ".id")) - 1)")"

# cycle all windows on space backwards by coordinate
shift + alt - tab : yabai -m window --focus "$(yabai -m query --windows --space | jq -re "[sort_by(.id, .frame) | .[] | select(.role == \"AXWindow\" and .subrole == \"AXStandardWindow\") | .id] | nth(index($(yabai -m query --windows --window | jq -re ".id")) - 1)")"


# float / unfloat window and center on screen
alt - t : yabai -m window --toggle float && yabai -m window --grid 4:4:1:1:2:2

# bring window to center of screen and hide everything else
alt - w : yabai -m window --toggle expose

# toggle sticky(+float), topmost, picture-in-picture
alt - p : yabai -m window --toggle sticky;\
          yabai -m window --toggle topmost;\
          yabai -m window --toggle pip
